version: '3.8'

services:
  # CouchDB 데이터베이스
  couchdb:
    image: couchdb:3.3
    container_name: barq-couchdb-dev
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    ports:
      - "5984:5984"
    volumes:
      - couchdb_data_dev:/opt/couchdb/data
    networks:
      - barq-network-dev
    restart: unless-stopped

  # 백엔드 FastAPI 서버 (개발 모드)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: barq-backend-dev
    environment:
      - COUCHDB_URL=http://admin:admin@couchdb:5984
      - FUNCTION_DB_NAME=barq
      - LOG_DB_NAME=logs
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - DOCKER_NETWORK=barq-network-dev
      - PYTHON_DOCKER_IMAGE=python:3.10
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend:/app  # 개발용 코드 마운트
      - backend_storage_dev:/app/storage
    networks:
      - barq-network-dev
    depends_on:
      - couchdb
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # 프론트엔드 Next.js 서버 (개발 모드)
  frontend:
    image: node:18-alpine
    container_name: barq-frontend-dev
    working_dir: /app
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app  # 개발용 코드 마운트
      - /app/node_modules  # node_modules 익명 볼륨
    networks:
      - barq-network-dev
    depends_on:
      - backend
    restart: unless-stopped
    command: sh -c "npm install && npm run dev"

volumes:
  couchdb_data_dev:
    driver: local
  backend_storage_dev:
    driver: local

networks:
  barq-network-dev:
    driver: bridge 